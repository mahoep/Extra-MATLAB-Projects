function [Time_out,Z_out] = ode87(ode,h,tspan,ic)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% This is an 8th order Runge Kutta method with 13 steps
%%% reference: http://www.mymathlib.com/c_source/diffeq/embedded_runge_kutta/embedded_fehlberg_7_8.c
%%% written by Matthew Hoeper
%%% github.com/mahoep
F = ode;
x = tspan;
y(1) = ic;

a = [0 2/27 1/9 1/6 5/12 1/2 5/6 1/6 2/3 1/3 1 0 1];
b = [0 2 1/36 1/24 1/48 1/20 1/108 1 1 1 1 1 1];
c = [0          0           0           0           0           0           0       0       0       0; 
    1/27        0           0           0           0           0           0       0       0       0;
    1           3           0           0           0           0           0       0       0       0;
    1           3           0           0           0           0           0       0       0       0;
    20          -75         75          0           0           0           0       0       0       0;
    1           5           4           0           0           0           0       0       0       0;
    -25         125         -260        250         0           0           0       0       0       0;
    31/300      61/225      -2/9        13/900      0           0           0       0       0       0;
    2           -53/6       704/45      -107/9      67/90       3           0       0       0       0;
    -91/108     23/108      -976/135    311/54      -19/60      17/6        -1/12   0       0       0;
    2383/4100   -341/164    4496/1025   -301/82     2133/4100   45/82       45/164  18/41   0       0;
    3/205       -6/41       -3/205      -3/41       3/41        6/41        0       0       0       0;
    -1777/4100  -341/164    4496/1025   -289/82     2193/4100   51/82       33/164  12/41   1       0;
    ];

for i=1:(length(x)-1)   
 k1 = F(x(i),y(i));
 k2 = F(x(i)+h*a(2), y(i)+ b(2)*h*k1*c(2,1));
 k3 = F(x(i)+h*a(3), y(i)+ b(3)*h*(k1*c(3,1) + k2*c(3,2)));
 k4 = F(x(i)+h*a(4), y(i)+ b(4)*h*(k1*c(4,1) + c(4,2)*k3));
 k5 = F(x(i)+h*a(5), y(i)+ b(5)*h*(c(5,1)*k1 + c(5,2)*k3 + c(5,3)*k4));
 k6 = F(x(i)+h*a(6), y(i)+ b(6)*h*(c(6,1)*k1 + c(6,2)*k4 + c(6,3)*k5));
 k7 = F(x(i)+h*a(7), y(i)+ b(7)*h*(c(7,1)*k1 + c(7,2)*k4 + c(7,3)*k5 + c(7,4)*k6)); 
 k8 = F(x(i)+h*a(8), y(i)+ b(8)*h*(c(8,1)*k1 + c(8,2)*k5 + c(8,3)*k6 + c(8,4)*k7));
 k9 = F(x(i)+h*a(9), y(i)+ b(9)*h*(c(9,1)*k1 + c(9,2)*k4 + c(9,3)*k5 + c(9,4)*k6 + c(9,5)*k7 + c(9,6)*k8));
 k10 = F(x(i)+h*a(10), y(i)+b(10)*h*(c(10,1)*k1 + c(10,2)*k4 + c(10,3)*k5+ c(10,4)*k6 + c(10,5)*k7 + c(10,6)*k8 + c(10,7)*k9));
 k11 = F(x(i)+h*a(11), y(i)+ b(11)*h*(c(11,1)*k1 + c(11,2)*k4 + c(11,3)*k5 + c(11,4)*k6 + c(11,5)*k7 + c(11,6)*k8 + c(11,7)*k9 + c(11,8)*k10));
 k12 = F(x(i)+h*a(12), y(i)+ b(12)*h*(c(12,1)*k1 + c(12,2)*k6 + c(12,3)*k7 + c(12,4)*k8 + c(12,5)*k9 + c(12,6)*k10));
 k13 = F(x(i)+h*a(13), y(i)+ b(13)*h*(c(13,1)*k1 + c(13,2)*k4 + c(13,3)*k5 +c(13,4)*k6 + c(13,5)*k7 + c(13,6)*k8 + c(13,7)*k9 + c(13,8)*k10 + c(13,9)*k12));
 
 
 y(i+1)=y(i)+(h)*(41/840*k1 + 34/105*k6 + 9/35*k7 + 9/35*k8 + 9/280*k9 + 9/280*k10 + 41/840*k11);
%  err(i) = -41/840*h*(k1 + k11 - k12 - k13);
 time_step(i) = h;

end 

Time_out = x(:);
Z_out = y(:);
end
